Team: 14
Software: R
Version: ORIGINAL


library(dplyr)
library(haven)
library(readxl)
library(foreign)
library(texreg)

issp1996 <- read_dta("ZA2900.dta")
issp2006 <- read_dta("ZA4700.dta")
l2       <- read.csv("L2data.csv")
l2$country %>% unique()

issp1996_red <- issp1996 %>% 
  dplyr::select(old_age_care = v39,
                unemployed = v41, 
                reduce_income_diff = v42, 
                jobs = v36, 
                sex = v200, 
                age = v201, 
                education = v205, 
                employment = v206, 
                country = v3) %>%
  mutate_all(as_factor) %>%
  mutate(year = 1996, 
         old_age_care = case_when(
           old_age_care %in% c("Definitely should", "Probably should") ~ 1,
           old_age_care %in% c("Definitely not", "Probably not") ~ 0,
           is.na(old_age_care) ~ NA_real_),
         unemployed = case_when(
           unemployed %in% c("Definitely should", "Probably should") ~ 1,
           unemployed %in% c("Definitely not", "Probably not") ~ 0,
           is.na(unemployed) ~ NA_real_),
         reduce_income_diff = case_when(
           reduce_income_diff %in% c("Definitely should", "Probably should") ~ 1,
           reduce_income_diff %in% c("Definitely not", "Probably not") ~ 0,
           is.na(reduce_income_diff) ~ NA_real_),
         jobs = case_when(
           jobs %in% c("Definitely should", "Probably should") ~ 1,
           jobs %in% c("Definitely not", "Probably not") ~ 0,
           is.na(jobs) ~ NA_real_),
         sex = as.integer(recode_factor(sex, `1`= "Male", `2` = "Female")) - 1,
         age = as.integer(substr(age, 1, 2)),
         education = case_when(
           # "incomplete secondary" is coded as primary or less,
           # R still at school is coded NA
           education %in% c("Incpl primary", 
                            "Incpl secondary", 
                            "Primary compl") ~ "Primary or less",
           education %in% c("Secondary compl", 
                            "Semi-higher,Incpl uni.") ~ "Secondary",
           education %in% "University compl" ~ "University or more",
           is.na(education) | education %in% "None;still at school,uni" ~ NA_character_),
         education = factor(education, levels = unique(education)[c(3, 1, 2)]),
         employment = case_when(
           employment %in% "F-time empl,main job" ~ "Full-time",
           employment %in% c("Help family member", "Housewife <man>", 
                             "Oth,n i lab force", "Permanent disabled", 
                             "Retired", "Studt,school,educ") ~ "Not active",
           employment %in% c("Less part-time", "P-t empl,main job") ~ "Part-time",
           employment %in% "Unemployed" ~ "Active unemployed",
           is.na(employment) ~ NA_character_),
         employment = factor(employment, levels = unique(employment)[c(3, 1, 2, 5)]),
         country = case_when(
           country == "aus" ~ "Australia",
           country == "bg" ~ "Bulgaria",
           country == "cdn" ~ "Canada",
           country == "ch" ~ "Switzerland",
           country == "cy" ~ "Cyprus",
           country == "cz" ~ "Czech Republic",
           country %in% c("D-E", "D-W") ~ "Germany", 
           country == "e" ~ "Spain",
           country == "f" ~ "France",
           country == "gb" ~ "United Kingdom",
           country == "h" ~ "Hungary",
           country == "i" ~ "Italy",
           country %in% c("IL-A", "IL-J") ~ "Israel", 
           country == "irl" ~ "Ireland",
           country == "j" ~ "Japan",
           country == "lv" ~ "Latvia",
           country == "n" ~ "Norway",
           country == "nz" ~ "New Zealand",
           country == "pl" ~ "Poland",
           country == "rp" ~ "Philippines", 
           country == "rus" ~ "Russia",
           country == "s" ~ "Sweden",
           country == "slo" ~ "Slovenia",
           country == "usa" ~ "United States"))

issp1996_red$employment %>% unique()
issp1996_red$education %>% unique()
issp1996_red$country %>% unique()

issp2006_red <- issp2006 %>% 
  dplyr::select(old_age_care = V28, 
                unemployed = V30, 
                reduce_income_diff = V31, 
                jobs = V25, 
                sex, 
                age, 
                education = degree, 
                employment = wrkst, 
                country = V3a) %>%
  mutate_all(as_factor) %>%
  mutate(year = 2006,
         old_age_care = case_when(
           old_age_care %in% c("Definitely should be", "Probably should be") ~ 1,
           old_age_care %in% c("Definitely should not be", "Probably should not be") ~ 0,
           is.na(old_age_care) ~ NA_real_),
         unemployed = case_when(
           unemployed %in% c("Definitely should be", "Probably should be") ~ 1,
           unemployed %in% c("Definitely should not be", "Probably should not be") ~ 0,
           is.na(unemployed) ~ NA_real_),
         reduce_income_diff = case_when(
           reduce_income_diff %in% c("Definitely should be", "Probably should be") ~ 1,
           reduce_income_diff %in% c("Definitely should not be", "Probably should not be") ~ 0,
           is.na(reduce_income_diff) ~ NA_real_),
         jobs = case_when(
           jobs %in% c("Definitely should be", "Probably should be") ~ 1,
           jobs %in% c("Definitely should not be", "Probably should not be") ~ 0,
           is.na(jobs) ~ NA_real_),
         sex = as.integer(recode_factor(sex, `1`= "Male", `2` = "Female")) - 1,
         age = as.integer(substr(age, 1, 2)),
         education = case_when(
           education %in% c("Above higher secondary level,other qualification",
                            "Above lowest qualification",
                            "Higher secondary completed") ~ "Secondary",
           education %in% c("Lowest formal qualification", 
                            "No formal qualification, incomplete primary") ~ "Primary or less",
           education %in% "University degree completed, graduate studies" ~ "University or more",
           is.na(education) ~ NA_character_),
         education = factor(education, levels = unique(education)[c(2, 1, 3)]),
         employment = case_when(
           employment %in% c("Employed, full-time,main job") ~ "Full-time",
           employment %in% c("Employed, less than part-time",
                             "Employed, part-time,main job") ~ "Part-time",
           employment %in% c("Helpig family member",
                             "Housewife,-man,home duties",
                             "Other,not in labour force",
                             "Permanently disabled",
                             "Retired",
                             "Student,school,vocational training") ~ "Not active",
           employment %in% "Unemployed" ~ "Active unemployed",
           is.na(employment) ~ NA_character_),
         employment = factor(employment, levels = unique(employment)[c(3, 2, 1, 5)]),
         country = substr(country, 4, 20),
         country = ifelse(country == "Great Britain", "United Kingdom", country))

issp2006_red$education %>% unique()
issp2006_red$employment %>% unique()
issp2006_red$country %>% unique()

issp <- rbind(issp1996_red, issp2006_red) %>%
  mutate(age_sq = age^2) %>%
  dplyr::select(year, country, female = sex, age, age_sq, education, employment, 
                old_age_care, unemployed, reduce_income_diff, jobs)

cri_data <- merge(issp, l2, by = c("country", "year"), all.x = TRUE) %>%
  mutate(country = factor(country),
         year = factor(year))

country_year <- table(cri_data$country, cri_data$year)
class(country_year) <- "matrix"
country_year <- as.data.frame(country_year) %>% 
  mutate(country = row.names(.)) %>% 
  dplyr::select(3, 1, 2)
keep_countries <- country_year %>% filter(`1996` > 0 & `2006` > 0)

cri_data <- cri_data %>% 
  filter(country %in% keep_countries$country) %>% 
  model.frame("~ .", .)
cri_data$country %>% unique()

cri_data %>% 
  group_by(year, country) %>% 
  dplyr::select(-employment, -education) %>%
  summarise_all(mean, na.rm = TRUE) %>%
  arrange(country) %>%
  View()


names(cri_data)
dv <- c("old_age_care", "unemployed", "reduce_income_diff", "jobs")
iv <- c("foreignpct", "foreignpct + socx", 
        "foreignpct + emprate", "netmigpct", 
        "netmigpct + socx", "emprate + netmigpct")
f0 <- formula(~ female + age + age_sq + education + employment + country + year)


model_list <- vector(mode = "list", length = 6)
for (i in seq_along(iv)) {
  f <- update(f0, paste0("~ ", iv[i], " + ."))
  sublist <- vector(mode = "list", length = 4)
  for (j in seq_along(dv)) {
    sublist[[j]] <- update(f, paste0(dv[j], " ~ ."))
  }
  model_list[[i]] <- sublist
}
model_list <- unlist(model_list)


# run models
models <- vector(mode = "list", length = 24) 
for (i in seq_along(model_list)) {
  print(model_list[[i]])
  models[[i]] <- glm(model_list[[i]], family = binomial(link = "logit"), data = cri_data)
}

summary(models[[1]])

coef_names <- names(coef(models[[1]]))
coef_names[grepl(coef_names, pattern = "country") == FALSE]
coefs <- list("foreignpct" = "Immigrant Stock %",
              "socx" = "Social Welfare Expenditures (% of GDP)",
              "emprate" = "Employment Rate (% in LF)",
              "netmigpct" = "Change in Immigrant Stock (1-year, in %)", 
              "age" = "Age",
              "age_sq" = "Age squared",
              "female" = "Female",
              "educationPrimary or less" = "Primary or less (ref.: Secondary)",
              "educationUniversity or more" = "University or more",
              "employmentNot active" = "Not active (ref.: Full-time)",
              "employmentPart-time" = "Part-time",
              "employmentActive unemployed" = "Active unemployed",
              "(Intercept)" = "Constant")


htmlreg(models, 
        override.coef = lapply(models, function(x) exp(coef(x))),
        override.se = lapply(models, function(x) coef(x)/sqrt(diag(vcov(x)))),
        custom.coef.map = coefs, 
        custom.model.names = 
          paste0("(", 1:24, ") ", rep(c("Old age care", 
                                        "Unemployment", 
                                        "Reduce income differences", 
                                        "Jobs for everyone"), 6)),
        groups = list("Country-level variables" = 1:4,
                      "Individual-level variables" = 5:12),
        caption.above = TRUE,
        file = "table.html")


htmlreg(models, 
        custom.model.names = 
          paste0("(", 1:24, ") ", rep(c("Old age care", 
                                        "Unemployment", 
                                        "Reduce income differences", 
                                        "Jobs for everyone"), 6)),
        groups = list("Country-level variables" = 1:4,
                      "Individual-level variables" = 5:12),
        caption.above = TRUE,
        file = "table_2.html")
